<UserControl x:Class="仓储管理系统.Views.OutstoreView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:仓储管理系统.Views"
                          xmlns:vm="clr-namespace:仓储管理系统.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             d:DataContext="{d:DesignInstance vm:OutstoreViewModel}"
             mc:Ignorable="d" 
             Background="{StaticResource BackgroundColor}"
             FontSize="16"
             d:DesignHeight="600" d:DesignWidth="1300">
    <!--事件触发;loaded转为命令,去绑定后端命令-->
    <i:Interaction.Triggers> 
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <!--状态栏-->
        <Grid.RowDefinitions> 
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="22*"/>
            <RowDefinition Height="203*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <!--标题-->
        <Border Grid.Row="0" Background="White" Height="50" CornerRadius="8" Margin="8,8,8,8">
            <DockPanel>
                <TextBlock DockPanel.Dock="Left" Text="物资出库" Margin="10 0 0 0" VerticalAlignment="Center"/>
                <Button  Content="新建" Margin="10 0 0 0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="100"
                         Command="{Binding CreateCommand}"/>
                <!--启动按钮,在MainWindow-->
            </DockPanel>
        </Border>
        <!--添加或修改,入库单-->
        <Border Grid.Row="1" Background="White"  CornerRadius="8" Margin="8,8,8,8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="出库单 :" Margin="20,10" FontWeight="Bold"/>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="10 0 10 0" Text="{Binding OutstoreOrder.Id}"/>
                    <TextBlock VerticalAlignment="Center" Margin="0 0 10 0" Text="单号:"/>
                    <TextBox VerticalAlignment="Center" Margin="0 0 10 0" Width="250" Height="25"
                        Text="{Binding OutstoreOrder.NameEx,UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock VerticalAlignment="Center" Margin="0 0 10 0" Text="所属仓库:"/>
                    <ComboBox VerticalAlignment="Center" Width="150" Height="25"  
                            ItemsSource="{Binding Warehouses}"
                            SelectedItem="{Binding Warehouse}"
                            DisplayMemberPath="Name">
                        <!--相对绑定源;绑定新命令-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource 
                                Mode=FindAncestor,AncestorType=ComboBox},Path=DataContext.WarehouseSelectionChangedCommand}"
                                                   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource 
                                AncestorType=ComboBox}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBlock VerticalAlignment="Center" Margin="10 0 10 0" Text="客户:"/>
                    <ComboBox VerticalAlignment="Center" Width="150" Height="25"  
                            ItemsSource="{Binding Customers}"
                            SelectedItem="{Binding Customer}"
                            DisplayMemberPath="Name"/>
                </StackPanel>
            </Grid>
        </Border>
        <!--入库明细-->
        <Border Grid.Row="2" Grid.RowSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--入库明细+按钮-->
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <TextBlock Text="出库明细" Margin="20,10" FontWeight="Bold"/>
                    <Button Content="+ 添加物资" Margin="10 0 0 0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="100"
                            Command="{Binding CreateInstoreCommand}"/>
                </StackPanel>
                <!--单元格_自定义模板-->
                <DataGrid Grid.Row="1"  
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserReorderColumns="False"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Outstores}" 
                          SelectedItem="{Binding Outstore}">

                    <!-- @所有物资都需显示出来 -->
                    <DataGrid.Columns>
                        <!-- 自定义 单元格模板-->
                        <!--
                            物资==独立绑定 可以解决 UpdateSourceTrigger=Explicit
                            库位==更改所属仓库从而更改库位，无法通过 Explicit手动更新(会全部更新)
                        -->
                        <DataGridTemplateColumn Header="物资名称">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--这里的Cargo是分部类Instore的-->
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid},Path=DataContext.Cargos}"
                                              SelectedItem="{Binding Cargo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Name">
                                        <!--DisplayMemberPath：数据源 字段名称-->
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="库位">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--选择所属仓库后，出现库位列表-->
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid},Path=DataContext.Locations}"
                                              SelectedItem="{Binding Location,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Name" />
                                    <!--DisplayMemberPath：数据源 字段名称-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--文本框 -->
                        <DataGridTemplateColumn Header="出库数量">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Number,UpdateSourceTrigger=PropertyChanged}" Width="80"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="单价">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Price,UpdateSourceTrigger=PropertyChanged}" Width="120"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="备注">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Tag,UpdateSourceTrigger=PropertyChanged}" Width="180"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>

                </DataGrid>
            </Grid>
        </Border>
        <!--统计或其他按钮-->
        <Border Grid.Row="4">
            <Button Content="保存" Margin="10 10 0 0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="100"
                    Command="{Binding AddOrUpdateCommand}"/>
        </Border>
    </Grid>
</UserControl>

